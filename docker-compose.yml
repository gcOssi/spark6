version: '3.8'

services:
  # Servicio Backend (Node.js + Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tasks_backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - FRONTEND_URL=http://localhost:3000
    networks:
      - tasks_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio Frontend (React + Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tasks_frontend
    ports:
      - "3000:80"
    environment:
      # Nginx/entrypoint usa estos para el Basic Auth
      BASIC_AUTH_USER: ${BASIC_AUTH_USER}
      BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
      # Opcional: para desactivar auth en local, pon SKIP_BASIC_AUTH=true en tu .env
      SKIP_BASIC_AUTH: ${SKIP_BASIC_AUTH:-false}
      # Si tu build de React lo usa:
      REACT_APP_API_URL: http://localhost:4000
    depends_on:
      - backend
    networks:
      - tasks_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Red personalizada para la comunicación entre servicios
networks:
  tasks_network:
    driver: bridge
    name: tasks_network

# Volúmenes (opcional, para persistencia de datos en el futuro)
volumes:
  backend_node_modules:
  frontend_node_modules:
